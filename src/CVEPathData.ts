import { PATH_DATA_DIR } from './configuration';

// TODO: Update this with the "clean" json attributes
export interface PathPoint {
    lat: number;
    long: number;
    messagebody: any;
}

export type Path = PathPoint[];

type PathMap = Map<string, Path>;

export default class CVEPathData {
    paths = new Map<string, Path>();
    private importQueue = [] as Promise<void>[];

    constructor(private pathIDs: string[]) {}

    private waitForAllImports(): Promise<void[]> {
        return Promise.all(this.importQueue);
    }

    private queueImport(pathID: string) {
        this.importQueue.push(this.importCVEData(pathID));
    }

    private importCVEData(pathID: string) {
        return import(`${PATH_DATA_DIR}/${pathID}.json`).then((data) => {
            this.extractCVEData(pathID, data);
        });
    }

    private extractCVEData(pathID: string, pathData: { default: PathPoint[] }) {
        this.paths.set(pathID, pathData['default']);
    }

    // initial (deferred construction)
    loadCVEData(): Promise<void[]> {
        this.pathIDs.forEach((pathID) => this.queueImport(pathID));
        return this.waitForAllImports();
    }

    public getPath(pathID: string): Path {
        return this.paths.get(pathID);
    }
}
