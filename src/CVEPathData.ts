import { PATH_DATA_DIR } from './configuration';

export interface PathPoint {
    lat: number;
    long: number;
    messagebody: any;
}

export type Path = PathPoint[];

type PathMap = Map<string, Path>;

export default class CVEPathData {
    paths = new Map<string, Path>();

    constructor(private pathIDs: string[]) {}

    load(): Promise<void[]> {
        const imports = [] as Promise<void>[];
        this.pathIDs.forEach((id) => {
            imports.push(
                import(`${PATH_DATA_DIR}/${id}.json`).then(
                    (pathData: { default: PathPoint[] }) => {
                        this.paths.set(id, pathData['default']);
                    },
                ),
            );
        });
        return Promise.all(imports);
    }

    public getPath(pathID: string): Path {
        return this.paths.get(pathID);
    }
}
